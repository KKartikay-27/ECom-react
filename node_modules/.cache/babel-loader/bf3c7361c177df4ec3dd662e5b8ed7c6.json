{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\n// src/hooks/use-carousel.tsx\nimport React, { useContext } from \"react\";\nvar CarouselContext = React.createContext({});\nvar CarouselProvider = CarouselContext.Provider;\nvar useCarousel = () => {\n  const context = useContext(CarouselContext);\n  return context;\n};\n\n// src/Carousel/Carousel.tsx\nimport { forwardRef, useEffect as useEffect7, useImperativeHandle, useRef as useRef3 } from \"react\";\n\n// src/hooks/use-interval.tsx\nimport { useEffect, useRef } from \"react\";\nfunction useInterval(callback, delay, enabled = true) {\n  const _callback = useRef();\n  useEffect(() => {\n    _callback.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    if (enabled && delay !== null) {\n      const id = setInterval(() => {\n        if (_callback.current) _callback.current();\n      }, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay, enabled]);\n}\n\n// src/hooks/use-paging.tsx\nimport { useState } from \"react\";\nfunction usePaging({\n  totalPages,\n  wrapMode\n}) {\n  const [currentPage, setCurrentPage] = useState(0);\n  const goToPage = idx => {\n    if (idx < 0 || idx >= totalPages) return;\n    setCurrentPage(idx);\n  };\n  const goForward = () => {\n    if (wrapMode === \"wrap\") {\n      setCurrentPage(prev => (prev + 1) % totalPages);\n    } else {\n      setCurrentPage(prev => Math.min(prev + 1, totalPages - 1));\n    }\n  };\n  const goBack = () => {\n    if (wrapMode === \"wrap\") {\n      setCurrentPage(prev => (prev - 1 + totalPages) % totalPages);\n    } else {\n      setCurrentPage(prev => Math.max(prev - 1, 0));\n    }\n  };\n  return {\n    currentPage,\n    goToPage,\n    goForward,\n    goBack\n  };\n}\n\n// src/hooks/use-debounced.tsx\nimport { useCallback, useRef as useRef2 } from \"react\";\nfunction useDebounced(callback, delay) {\n  const timerRef = useRef2();\n  return useCallback((...args) => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n    timerRef.current = setTimeout(() => {\n      callback(...args);\n    }, delay);\n  }, [callback, delay]);\n}\n\n// src/hooks/use-measurement.tsx\nimport { useEffect as useEffect3, useState as useState3 } from \"react\";\n\n// src/utils/array.ts\nfunction arraySeq(length, initialValue) {\n  return new Array(length).fill(0).map((_, i) => i * initialValue);\n}\nfunction arraySum(values) {\n  let sum = 0;\n  return values.map(value => sum += value);\n}\nfunction nint(array, target) {\n  return array.reduce((prev, curr) => Math.abs(curr - target) < Math.abs(prev - target) ? curr : prev);\n}\n\n// src/utils/css.ts\nfunction cls(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\n\n// src/utils/browser.ts\nvar isBrowser = () => typeof window !== \"undefined\";\n\n// src/hooks/use-resize-observer.tsx\nimport { useEffect as useEffect2, useState as useState2 } from \"react\";\nfunction useResizeObserver(element) {\n  const [dimensions, setDimensions] = useState2();\n  useEffect2(() => {\n    if (!element.current) return;\n    const target = element.current;\n    const observer = new ResizeObserver(() => setDimensions(target.getBoundingClientRect()));\n    observer.observe(target);\n    return () => {\n      observer.unobserve(target);\n    };\n  }, [element]);\n  return dimensions;\n}\n\n// src/hooks/use-measurement.tsx\nfunction useMeasurement({\n  element,\n  scrollDistance\n}) {\n  const [totalPages, setTotalPages] = useState3(0);\n  const [scrollOffset, setScrollOffset] = useState3(arraySeq(totalPages, 0));\n  const dimensions = useResizeObserver(element);\n  useEffect3(() => {\n    var _a;\n    const container = element.current;\n    if (!(container && dimensions)) return;\n    const scrollWidth = container.scrollWidth;\n    const visibleWidth = container.offsetWidth;\n    const remainder = scrollWidth - visibleWidth;\n    if (visibleWidth === 0) return;\n    switch (scrollDistance) {\n      case \"screen\":\n        {\n          const pageCount = Math.round(scrollWidth / visibleWidth);\n          setTotalPages(pageCount);\n          setScrollOffset(arraySeq(pageCount, visibleWidth));\n          break;\n        }\n      case \"slide\":\n        {\n          const children = ((_a = container.querySelector(\"#nuka-wrapper\")) == null ? void 0 : _a.children) || [];\n          const offsets = Array.from(children).map(child => child.offsetWidth);\n          const scrollOffsets = arraySum([0, ...offsets.slice(0, -1)]);\n          const pageCount = scrollOffsets.findIndex(offset => offset >= remainder) + 1;\n          setTotalPages(pageCount);\n          setScrollOffset(scrollOffsets);\n          break;\n        }\n      default:\n        {\n          if (typeof scrollDistance === \"number\" && scrollDistance > 0) {\n            const pageCount = Math.ceil(remainder / scrollDistance) + 1;\n            setTotalPages(pageCount);\n            setScrollOffset(arraySeq(pageCount, scrollDistance));\n          }\n        }\n    }\n  }, [element, scrollDistance, dimensions]);\n  return {\n    totalPages,\n    scrollOffset\n  };\n}\n\n// src/hooks/use-hover.tsx\nimport { useEffect as useEffect4, useState as useState4 } from \"react\";\nfunction useHover({\n  element,\n  enabled\n}) {\n  const [hovered, setHovered] = useState4(false);\n  const target = element == null ? void 0 : element.current;\n  useEffect4(() => {\n    if (!(target && target.addEventListener)) return;\n    if (enabled) {\n      const onMouseOver = () => setHovered(true);\n      const onMouseOut = () => setHovered(false);\n      target.addEventListener(\"mouseover\", onMouseOver);\n      target.addEventListener(\"mouseout\", onMouseOut);\n      return () => {\n        target.removeEventListener(\"mouseover\", onMouseOver);\n        target.removeEventListener(\"mouseout\", onMouseOut);\n      };\n    }\n  }, [target, enabled]);\n  return hovered;\n}\n\n// src/hooks/use-keyboard.tsx\nimport { useEffect as useEffect5 } from \"react\";\nfunction useKeyboard({\n  element,\n  enabled,\n  goForward,\n  goBack\n}) {\n  const target = element == null ? void 0 : element.current;\n  useEffect5(() => {\n    if (target && enabled) {\n      const onKeyDown = e => {\n        if (e.key === \"ArrowLeft\") {\n          goBack();\n        } else if (e.key === \"ArrowRight\") {\n          goForward();\n        }\n      };\n      target.addEventListener(\"keydown\", onKeyDown);\n      return () => target.removeEventListener(\"keydown\", onKeyDown);\n    }\n  }, [enabled, goBack, goForward, target]);\n}\n\n// src/hooks/use-reduced-motion.tsx\nimport { useEffect as useEffect6, useState as useState5 } from \"react\";\nvar QUERY = \"(prefers-reduced-motion: no-preference)\";\nvar getInitialState = () => isBrowser() ? !window.matchMedia(QUERY).matches : true;\nfunction useReducedMotion({\n  enabled\n}) {\n  const [reduceMotion, setReducedMotion] = useState5(getInitialState);\n  useEffect6(() => {\n    if (!(isBrowser() && enabled)) return;\n    const mediaQueryList = window.matchMedia(QUERY);\n    const listener = event => {\n      setReducedMotion(!event.matches);\n    };\n    mediaQueryList.addEventListener(\"change\", listener);\n    return () => {\n      mediaQueryList.removeEventListener(\"change\", listener);\n    };\n  }, [enabled]);\n  return reduceMotion;\n}\n\n// src/Carousel/NavButtons.tsx\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nfunction NavButtons() {\n  const {\n    currentPage,\n    totalPages,\n    wrapMode,\n    goBack,\n    goForward\n  } = useCarousel();\n  const allowWrap = wrapMode !== \"nowrap\";\n  const enablePrevNavButton = allowWrap || currentPage > 0;\n  const enableNextNavButton = allowWrap || currentPage < totalPages - 1;\n  const prevNavClassName = cls(\"nuka-nav-button\", \"nuka-nav-button-prev\", enablePrevNavButton && \"nuka-nav-button-enabled\");\n  const nextNavClassName = cls(\"nuka-nav-button\", \"nuka-nav-button-next\", enableNextNavButton && \"nuka-nav-button-enabled\");\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsx(\"div\", {\n      className: prevNavClassName,\n      onClick: goBack,\n      children: /* @__PURE__ */jsx(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 20 20\",\n        fill: \"currentcolor\",\n        children: /* @__PURE__ */jsx(\"path\", {\n          fillRule: \"evenodd\",\n          d: \"M11.78 5.22a.75.75 0 0 1 0 1.06L8.06 10l3.72 3.72a.75.75 0 1 1-1.06 1.06l-4.25-4.25a.75.75 0 0 1 0-1.06l4.25-4.25a.75.75 0 0 1 1.06 0Z\",\n          clipRule: \"evenodd\"\n        })\n      })\n    }), /* @__PURE__ */jsx(\"div\", {\n      className: nextNavClassName,\n      onClick: goForward,\n      children: /* @__PURE__ */jsx(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 20 20\",\n        fill: \"currentcolor\",\n        children: /* @__PURE__ */jsx(\"path\", {\n          fillRule: \"evenodd\",\n          d: \"M8.22 5.22a.75.75 0 0 1 1.06 0l4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.75.75 0 0 1-1.06-1.06L11.94 10 8.22 6.28a.75.75 0 0 1 0-1.06Z\",\n          clipRule: \"evenodd\"\n        })\n      })\n    })]\n  });\n}\n\n// src/Carousel/PageIndicators.tsx\nimport { jsx as jsx2 } from \"react/jsx-runtime\";\nvar PageIndicators = () => {\n  const {\n    totalPages,\n    currentPage,\n    goToPage\n  } = useCarousel();\n  const className = index => cls(\"nuka-page-indicator\", currentPage === index ? \"nuka-page-indicator-active\" : \"\");\n  return /* @__PURE__ */jsx2(\"div\", {\n    className: \"nuka-page-container\",\n    \"data-testid\": \"pageIndicatorContainer\",\n    children: [...Array(totalPages)].map((_, index) => /* @__PURE__ */jsx2(\"button\", {\n      onClick: () => goToPage(index),\n      className: className(index),\n      children: /* @__PURE__ */jsx2(\"span\", {\n        className: \"nuka-hidden\",\n        children: index + 1\n      })\n    }, index))\n  });\n};\n\n// #style-inject:#style-inject\nfunction styleInject(css, {\n  insertAt\n} = {}) {\n  if (!css || typeof document === \"undefined\") return;\n  const head = document.head || document.getElementsByTagName(\"head\")[0];\n  const style = document.createElement(\"style\");\n  style.type = \"text/css\";\n  if (insertAt === \"top\") {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\n// src/Carousel/Carousel.css\nstyleInject(\".nuka-hidden {\\n  position: absolute;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  margin: -1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0);\\n  white-space: nowrap;\\n  border-width: 0;\\n}\\n.nuka-container {\\n  position: relative;\\n}\\n.nuka-slide-container {\\n  position: relative;\\n}\\n.nuka-overflow {\\n  overflow: scroll;\\n  scroll-behavior: smooth;\\n  -ms-overflow-style: none;\\n  scrollbar-width: none;\\n}\\n.nuka-overflow::-webkit-scrollbar {\\n  display: none;\\n}\\n.nuka-wrapper {\\n  display: flex;\\n}\\n.nuka-nav-button {\\n  position: absolute;\\n  top: calc(50% - 2rem);\\n  margin: 1rem;\\n  display: none;\\n  height: 2rem;\\n  width: 2rem;\\n  cursor: pointer;\\n  background-color: rgba(146, 148, 151, 0.5);\\n  color: white;\\n  border-radius: 9999px;\\n  font-size: 1rem;\\n  user-select: none;\\n}\\n.nuka-nav-button.nuka-nav-button-prev {\\n  left: 0;\\n  margin-right: 1rem;\\n}\\n.nuka-nav-button.nuka-nav-button-next {\\n  right: 0;\\n  margin-left: 1rem;\\n}\\n.nuka-nav-button:hover {\\n  background-color: rgba(146, 148, 151, 0.65);\\n}\\n.nuka-nav-button-enabled {\\n  display: block;\\n}\\n.nuka-container-auto-hide .nuka-nav-button {\\n  display: none;\\n}\\n.nuka-container-auto-hide:hover .nuka-nav-button-enabled {\\n  display: block;\\n}\\n.nuka-page-container {\\n  padding-top: 1rem;\\n  padding-bottom: 1rem;\\n  display: flex;\\n  gap: 0.5rem;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.nuka-page-indicator {\\n  width: 0.75rem;\\n  height: 0.75rem;\\n  cursor: pointer;\\n  border-radius: 9999px;\\n  border-style: none;\\n  background-color: rgba(146, 148, 151, 0.65);\\n}\\n.nuka-page-indicator.nuka-page-indicator-active,\\n.nuka-page-indicator.nuka-page-indicator-active:hover {\\n  background-color: rgb(229 231 235 / 1);\\n}\\n.nuka-page-indicator:hover {\\n  background-color: rgb(229 231 235 / 1);\\n}\\n\");\n\n// src/Carousel/Carousel.tsx\nimport { jsx as jsx3, jsxs as jsxs2 } from \"react/jsx-runtime\";\nvar defaults = {\n  arrows: /* @__PURE__ */jsx3(NavButtons, {}),\n  autoplay: false,\n  autoplayInterval: 3e3,\n  dots: /* @__PURE__ */jsx3(PageIndicators, {}),\n  id: \"nuka-carousel\",\n  keyboard: true,\n  scrollDistance: \"screen\",\n  showArrows: false,\n  showDots: false,\n  swiping: true,\n  wrapMode: \"nowrap\"\n};\nvar Carousel = forwardRef((props, ref) => {\n  const options = __spreadValues(__spreadValues({}, defaults), props);\n  const {\n    afterSlide,\n    arrows,\n    autoplay,\n    autoplayInterval,\n    beforeSlide,\n    children,\n    className,\n    dots,\n    id,\n    keyboard,\n    scrollDistance,\n    showArrows,\n    showDots,\n    swiping,\n    title,\n    wrapMode\n  } = options;\n  const carouselRef = useRef3(null);\n  const containerRef = useRef3(null);\n  const {\n    totalPages,\n    scrollOffset\n  } = useMeasurement({\n    element: containerRef,\n    scrollDistance\n  });\n  const {\n    currentPage,\n    goBack,\n    goForward,\n    goToPage\n  } = usePaging({\n    totalPages,\n    wrapMode\n  });\n  const onContainerScroll = useDebounced(() => {\n    if (!containerRef.current) return;\n    const scrollLeft = containerRef.current.scrollLeft;\n    const closestPageIndex = scrollOffset.indexOf(nint(scrollOffset, scrollLeft));\n    goToPage(closestPageIndex);\n  }, 100);\n  useKeyboard({\n    element: carouselRef,\n    enabled: keyboard,\n    goForward,\n    goBack\n  });\n  useImperativeHandle(ref, () => ({\n    goForward,\n    goBack,\n    goToPage\n  }), [goForward, goBack, goToPage]);\n  const isHovered = useHover({\n    element: containerRef,\n    enabled: autoplay\n  });\n  const prefersReducedMotion = useReducedMotion({\n    enabled: autoplay\n  });\n  const autoplayEnabled = autoplay && !(isHovered || prefersReducedMotion);\n  useInterval(goForward, autoplayInterval, autoplayEnabled);\n  useEffect7(() => {\n    if (containerRef.current) {\n      beforeSlide && beforeSlide();\n      containerRef.current.scrollLeft = scrollOffset[currentPage];\n      afterSlide && setTimeout(() => afterSlide(), 0);\n    }\n  }, [currentPage, scrollOffset, beforeSlide, afterSlide]);\n  const containerClassName = cls(\"nuka-container\", showArrows === \"hover\" && \"nuka-container-auto-hide\", className);\n  const providerValues = __spreadProps(__spreadValues({}, options), {\n    totalPages,\n    currentPage,\n    scrollOffset,\n    goBack,\n    goForward,\n    goToPage\n  });\n  return /* @__PURE__ */jsxs2(CarouselProvider, {\n    value: providerValues,\n    children: [/* @__PURE__ */jsxs2(\"div\", {\n      className: containerClassName,\n      \"aria-labelledby\": \"nuka-carousel-heading\",\n      tabIndex: keyboard ? 0 : void 0,\n      ref: carouselRef,\n      id,\n      children: [title && /* @__PURE__ */jsx3(\"h3\", {\n        id: \"nuka-carousel-heading\",\n        className: \"nuka-hidden\",\n        children: title\n      }), /* @__PURE__ */jsxs2(\"div\", {\n        className: \"nuka-slide-container\",\n        children: [/* @__PURE__ */jsx3(\"div\", {\n          className: \"nuka-overflow\",\n          ref: containerRef,\n          onTouchMove: onContainerScroll,\n          id: \"nuka-overflow\",\n          \"data-testid\": \"nuka-overflow\",\n          style: {\n            touchAction: swiping ? \"pan-x\" : \"none\"\n          },\n          children: /* @__PURE__ */jsx3(\"div\", {\n            className: \"nuka-wrapper\",\n            id: \"nuka-wrapper\",\n            \"data-testid\": \"nuka-wrapper\",\n            children\n          })\n        }), showArrows && arrows]\n      })]\n    }), showDots && dots]\n  });\n});\nCarousel.displayName = \"Carousel\";\nexport { Carousel, CarouselProvider, useCarousel };","map":{"version":3,"names":["React","useContext","CarouselContext","createContext","CarouselProvider","Provider","useCarousel","context","forwardRef","useEffect","useEffect7","useImperativeHandle","useRef","useRef3","useInterval","callback","delay","enabled","_callback","current","id","setInterval","clearInterval","useState","usePaging","totalPages","wrapMode","currentPage","setCurrentPage","goToPage","idx","goForward","prev","Math","min","goBack","max","useCallback","useRef2","useDebounced","timerRef","args","clearTimeout","setTimeout","useEffect3","useState3","arraySeq","length","initialValue","Array","fill","map","_","i","arraySum","values","sum","value","nint","array","target","reduce","curr","abs","cls","classes","filter","Boolean","join","isBrowser","window","useEffect2","useState2","useResizeObserver","element","dimensions","setDimensions","observer","ResizeObserver","getBoundingClientRect","observe","unobserve","useMeasurement","scrollDistance","setTotalPages","scrollOffset","setScrollOffset","_a","container","scrollWidth","visibleWidth","offsetWidth","remainder","pageCount","round","children","querySelector","offsets","from","child","scrollOffsets","slice","findIndex","offset","ceil","useEffect4","useState4","useHover","hovered","setHovered","addEventListener","onMouseOver","onMouseOut","removeEventListener","useEffect5","useKeyboard","onKeyDown","e","key","useEffect6","useState5","QUERY","getInitialState","matchMedia","matches","useReducedMotion","reduceMotion","setReducedMotion","mediaQueryList","listener","event","Fragment","jsx","jsxs","NavButtons","allowWrap","enablePrevNavButton","enableNextNavButton","prevNavClassName","nextNavClassName","className","onClick","xmlns","viewBox","fillRule","d","clipRule","jsx2","PageIndicators","index","styleInject","css","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","jsx3","jsxs2","defaults","arrows","autoplay","autoplayInterval","dots","keyboard","showArrows","showDots","swiping","Carousel","props","ref","options","__spreadValues","afterSlide","beforeSlide","title","carouselRef","containerRef","onContainerScroll","scrollLeft","closestPageIndex","indexOf","isHovered","prefersReducedMotion","autoplayEnabled","containerClassName","providerValues","__spreadProps","tabIndex","onTouchMove","touchAction","displayName"],"sources":["../src/hooks/use-carousel.tsx","../src/Carousel/Carousel.tsx","../src/hooks/use-interval.tsx","../src/hooks/use-paging.tsx","../src/hooks/use-debounced.tsx","../src/hooks/use-measurement.tsx","../src/utils/array.ts","../src/utils/css.ts","../src/utils/browser.ts","../src/hooks/use-resize-observer.tsx","../src/hooks/use-hover.tsx","../src/hooks/use-keyboard.tsx","../src/hooks/use-reduced-motion.tsx","../src/Carousel/NavButtons.tsx","../src/Carousel/PageIndicators.tsx","#style-inject:#style-inject","../src/Carousel/Carousel.css"],"sourcesContent":["import React, { useContext } from 'react';\n\nimport { CarouselProps } from '../types';\n\ntype CarouselContextType = CarouselProps & {\n  currentPage: number;\n  scrollOffset: number[];\n  totalPages: number;\n  goToPage: (idx: number) => void;\n  goForward: () => void;\n  goBack: () => void;\n};\n\nconst CarouselContext = React.createContext<CarouselContextType>(\n  {} as unknown as CarouselContextType,\n);\nexport const CarouselProvider = CarouselContext.Provider;\n\nexport const useCarousel = () => {\n  const context = useContext(CarouselContext);\n  return context;\n};\n","import { forwardRef, useEffect, useImperativeHandle, useRef } from 'react';\n\nimport { useInterval } from '../hooks/use-interval';\nimport { usePaging } from '../hooks/use-paging';\nimport { useDebounced } from '../hooks/use-debounced';\nimport { useMeasurement } from '../hooks/use-measurement';\nimport { useHover } from '../hooks/use-hover';\nimport { useKeyboard } from '../hooks/use-keyboard';\nimport { useReducedMotion } from '../hooks/use-reduced-motion';\nimport { CarouselProvider } from '../hooks/use-carousel';\nimport { CarouselProps, SlideHandle } from '../types';\nimport { cls, nint } from '../utils';\nimport { NavButtons } from './NavButtons';\nimport { PageIndicators } from './PageIndicators';\n\nimport './Carousel.css';\n\nconst defaults = {\n  arrows: <NavButtons />,\n  autoplay: false,\n  autoplayInterval: 3000,\n  dots: <PageIndicators />,\n  id: 'nuka-carousel',\n  keyboard: true,\n  scrollDistance: 'screen',\n  showArrows: false,\n  showDots: false,\n  swiping: true,\n  wrapMode: 'nowrap',\n} satisfies Partial<CarouselProps>;\n\nexport const Carousel = forwardRef<SlideHandle, CarouselProps>(\n  (props: CarouselProps, ref) => {\n    const options = { ...defaults, ...props };\n\n    const {\n      afterSlide,\n      arrows,\n      autoplay,\n      autoplayInterval,\n      beforeSlide,\n      children,\n      className,\n      dots,\n      id,\n      keyboard,\n      scrollDistance,\n      showArrows,\n      showDots,\n      swiping,\n      title,\n      wrapMode,\n    } = options;\n\n    const carouselRef = useRef<HTMLDivElement | null>(null);\n    const containerRef = useRef<HTMLDivElement | null>(null);\n\n    // -- update page count and scroll offset based on scroll distance\n    const { totalPages, scrollOffset } = useMeasurement({\n      element: containerRef,\n      scrollDistance,\n    });\n\n    // -- paging\n    const { currentPage, goBack, goForward, goToPage } = usePaging({\n      totalPages,\n      wrapMode,\n    });\n\n    // -- handle touch scroll events\n    const onContainerScroll = useDebounced(() => {\n      if (!containerRef.current) return;\n\n      // find the closest page index based on the scroll position\n      const scrollLeft = containerRef.current.scrollLeft;\n      const closestPageIndex = scrollOffset.indexOf(\n        nint(scrollOffset, scrollLeft),\n      );\n      goToPage(closestPageIndex);\n    }, 100);\n\n    // -- keyboard nav\n    useKeyboard({\n      element: carouselRef,\n      enabled: keyboard,\n      goForward,\n      goBack,\n    });\n\n    // -- forward events to ref\n    useImperativeHandle(ref, () => ({ goForward, goBack, goToPage }), [\n      goForward,\n      goBack,\n      goToPage,\n    ]);\n\n    // -- autoplay\n    const isHovered = useHover({ element: containerRef, enabled: autoplay });\n    const prefersReducedMotion = useReducedMotion({ enabled: autoplay });\n    const autoplayEnabled = autoplay && !(isHovered || prefersReducedMotion);\n    useInterval(goForward, autoplayInterval, autoplayEnabled);\n\n    // -- scroll container when page index changes\n    useEffect(() => {\n      if (containerRef.current) {\n        beforeSlide && beforeSlide();\n        containerRef.current.scrollLeft = scrollOffset[currentPage];\n        afterSlide && setTimeout(() => afterSlide(), 0);\n      }\n    }, [currentPage, scrollOffset, beforeSlide, afterSlide]);\n\n    const containerClassName = cls(\n      'nuka-container',\n      showArrows === 'hover' && 'nuka-container-auto-hide',\n      className,\n    );\n\n    const providerValues = {\n      ...options,\n      totalPages,\n      currentPage,\n      scrollOffset,\n      goBack,\n      goForward,\n      goToPage,\n    };\n\n    return (\n      <CarouselProvider value={providerValues}>\n        <div\n          className={containerClassName}\n          aria-labelledby=\"nuka-carousel-heading\"\n          tabIndex={keyboard ? 0 : undefined}\n          ref={carouselRef}\n          id={id}\n        >\n          {title && (\n            <h3 id=\"nuka-carousel-heading\" className=\"nuka-hidden\">\n              {title}\n            </h3>\n          )}\n          <div className=\"nuka-slide-container\">\n            <div\n              className=\"nuka-overflow\"\n              ref={containerRef}\n              onTouchMove={onContainerScroll}\n              id=\"nuka-overflow\"\n              data-testid=\"nuka-overflow\"\n              style={{ touchAction: swiping ? 'pan-x' : 'none' }}\n            >\n              <div\n                className=\"nuka-wrapper\"\n                id=\"nuka-wrapper\"\n                data-testid=\"nuka-wrapper\"\n              >\n                {children}\n              </div>\n            </div>\n            {showArrows && arrows}\n          </div>\n        </div>\n        {showDots && dots}\n      </CarouselProvider>\n    );\n  },\n);\n\nCarousel.displayName = 'Carousel';\n","import { useEffect, useRef } from 'react';\n\ntype CallbackFunction = (...args: never[]) => void;\n\nexport function useInterval(\n  callback: CallbackFunction,\n  delay: number,\n  enabled = true,\n) {\n  const _callback = useRef<CallbackFunction>();\n\n  useEffect(() => {\n    _callback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (enabled && delay !== null) {\n      const id = setInterval(() => {\n        if (_callback.current) _callback.current();\n      }, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay, enabled]);\n}\n","import { useState } from 'react';\n\nimport { CarouselProps } from '../types';\n\ntype UsePagingReturnType = {\n  currentPage: number;\n  goToPage: (idx: number) => void;\n  goForward: () => void;\n  goBack: () => void;\n};\n\ntype PagingProps = {\n  totalPages: number;\n  wrapMode: CarouselProps['wrapMode'];\n};\n\nexport function usePaging({\n  totalPages,\n  wrapMode,\n}: PagingProps): UsePagingReturnType {\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const goToPage = (idx: number) => {\n    if (idx < 0 || idx >= totalPages) return;\n    setCurrentPage(idx);\n  };\n\n  const goForward = () => {\n    if (wrapMode === 'wrap') {\n      setCurrentPage((prev) => (prev + 1) % totalPages);\n    } else {\n      setCurrentPage((prev) => Math.min(prev + 1, totalPages - 1));\n    }\n  };\n\n  const goBack = () => {\n    if (wrapMode === 'wrap') {\n      setCurrentPage((prev) => (prev - 1 + totalPages) % totalPages);\n    } else {\n      setCurrentPage((prev) => Math.max(prev - 1, 0));\n    }\n  };\n\n  return { currentPage, goToPage, goForward, goBack };\n}\n","import { useCallback, useRef } from 'react';\n\ntype CallbackFunction = (...args: never[]) => void;\n\nexport function useDebounced(callback: CallbackFunction, delay: number) {\n  const timerRef = useRef<NodeJS.Timeout>();\n\n  return useCallback(\n    (...args: never[]) => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      timerRef.current = setTimeout(() => {\n        callback(...args);\n      }, delay);\n    },\n    [callback, delay],\n  );\n}\n","import { useEffect, useState } from 'react';\n\nimport { arraySeq, arraySum } from '../utils';\nimport { useResizeObserver } from './use-resize-observer';\n\ntype MeasurementProps = {\n  element: React.RefObject<HTMLDivElement>;\n  scrollDistance: number | 'slide' | 'screen';\n};\n\nexport function useMeasurement({ element, scrollDistance }: MeasurementProps) {\n  const [totalPages, setTotalPages] = useState(0);\n  const [scrollOffset, setScrollOffset] = useState(arraySeq(totalPages, 0));\n  const dimensions = useResizeObserver(element);\n\n  useEffect(() => {\n    const container = element.current;\n    if (!(container && dimensions)) return;\n\n    // determine the width of the content that is not visible (overflow)\n    // we ignore the bounding box width because its a float\n    // and scrollWidth is an integer, so it creates an imperfect\n    // calculation when the scrollWidth is a few pixels larger\n    const scrollWidth = container.scrollWidth;\n    const visibleWidth = container.offsetWidth;\n    const remainder = scrollWidth - visibleWidth;\n\n    if (visibleWidth === 0) return;\n\n    switch (scrollDistance) {\n      case 'screen': {\n        const pageCount = Math.round(scrollWidth / visibleWidth);\n\n        setTotalPages(pageCount);\n        setScrollOffset(arraySeq(pageCount, visibleWidth));\n        break;\n      }\n      case 'slide': {\n        // creates an array of slide widths in order to support\n        // slides of varying widths as children\n        const children =\n          container.querySelector('#nuka-wrapper')?.children || [];\n        const offsets = Array.from(children).map(\n          (child) => (child as HTMLElement).offsetWidth,\n        );\n\n        // shift the scroll offsets by one to account for the first slide\n        const scrollOffsets = arraySum([0, ...offsets.slice(0, -1)]);\n\n        // find the index of the scroll offset that is greater than\n        // the remainder of the full width and window width\n        const pageCount =\n          scrollOffsets.findIndex((offset) => offset >= remainder) + 1;\n\n        setTotalPages(pageCount);\n        setScrollOffset(scrollOffsets);\n        break;\n      }\n      default: {\n        if (typeof scrollDistance === 'number' && scrollDistance > 0) {\n          // find the number of pages required to scroll all the slides\n          // to the end of the container\n          const pageCount = Math.ceil(remainder / scrollDistance) + 1;\n\n          setTotalPages(pageCount);\n          setScrollOffset(arraySeq(pageCount, scrollDistance));\n        }\n      }\n    }\n  }, [element, scrollDistance, dimensions]);\n\n  return { totalPages, scrollOffset };\n}\n","/**\n * Creates an zero based array of numbers each multiplied by initialValue\n * @param length The length of the array\n * @param initialValue The seed value that each element will be multiplied by\n * @returns An array of numbers\n */\nexport function arraySeq(length: number, initialValue: number): number[] {\n  return new Array(length).fill(0).map((_, i) => i * initialValue);\n}\n\n/**\n * Creates an array where each element is the sum of all previous elements\n * @param values The seed array\n * @returns An array of numbers\n */\nexport function arraySum(values: number[]): number[] {\n  let sum = 0;\n  return values.map((value) => (sum += value));\n}\n\n/**\n * Finds the nearest number in an array to a target number\n * @returns A number\n */\nexport function nint(array: number[], target: number): number {\n  return array.reduce((prev, curr) =>\n    Math.abs(curr - target) < Math.abs(prev - target) ? curr : prev,\n  );\n}\n","type ClassName = string | boolean | undefined;\n\nexport function cls(...classes: ClassName[]) {\n  return classes.filter(Boolean).join(' ');\n}\n","export const isBrowser = () => typeof window !== 'undefined';\n","import { RefObject, useEffect, useState } from 'react';\n\nexport function useResizeObserver(element: RefObject<HTMLElement>) {\n  const [dimensions, setDimensions] = useState<DOMRect>();\n\n  useEffect(() => {\n    if (!element.current) return;\n\n    const target = element.current;\n\n    const observer = new ResizeObserver(() =>\n      setDimensions(target.getBoundingClientRect()),\n    );\n\n    observer.observe(target);\n    return () => {\n      observer.unobserve(target);\n    };\n  }, [element]);\n\n  return dimensions;\n}\n","import { useEffect, useState } from 'react';\nimport type { RefObject } from 'react';\n\nexport function useHover<T extends HTMLElement>({\n  element,\n  enabled,\n}: {\n  element: RefObject<T>;\n  enabled: boolean;\n}) {\n  const [hovered, setHovered] = useState(false);\n\n  const target = element?.current;\n\n  useEffect(() => {\n    if (!(target && target.addEventListener)) return;\n\n    if (enabled) {\n      const onMouseOver = () => setHovered(true);\n      const onMouseOut = () => setHovered(false);\n\n      target.addEventListener('mouseover', onMouseOver);\n      target.addEventListener('mouseout', onMouseOut);\n\n      return () => {\n        target.removeEventListener('mouseover', onMouseOver);\n        target.removeEventListener('mouseout', onMouseOut);\n      };\n    }\n  }, [target, enabled]);\n\n  return hovered;\n}\n","import { useEffect } from 'react';\nimport type { RefObject } from 'react';\n\nexport function useKeyboard<T extends HTMLElement>({\n  element,\n  enabled,\n  goForward,\n  goBack,\n}: {\n  element: RefObject<T>;\n  enabled: boolean;\n  goForward: () => void;\n  goBack: () => void;\n}) {\n  const target = element?.current;\n\n  useEffect(() => {\n    if (target && enabled) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (e.key === 'ArrowLeft') {\n          goBack();\n        } else if (e.key === 'ArrowRight') {\n          goForward();\n        }\n      };\n      target.addEventListener('keydown', onKeyDown);\n      return () => target.removeEventListener('keydown', onKeyDown);\n    }\n  }, [enabled, goBack, goForward, target]);\n}\n","import { useEffect, useState } from 'react';\n\nimport { isBrowser } from '../utils';\n\nconst QUERY = '(prefers-reduced-motion: no-preference)';\nconst getInitialState = () =>\n  isBrowser() ? !window.matchMedia(QUERY).matches : true;\n\nexport function useReducedMotion({ enabled }: { enabled: boolean }) {\n  const [reduceMotion, setReducedMotion] = useState(getInitialState);\n\n  useEffect(() => {\n    if (!(isBrowser() && enabled)) return;\n\n    const mediaQueryList = window.matchMedia(QUERY);\n\n    const listener = (event: MediaQueryListEvent) => {\n      setReducedMotion(!event.matches);\n    };\n\n    mediaQueryList.addEventListener('change', listener);\n\n    return () => {\n      mediaQueryList.removeEventListener('change', listener);\n    };\n  }, [enabled]);\n  return reduceMotion;\n}\n","import { useCarousel } from '../hooks/use-carousel';\nimport { cls } from '../utils';\n\nexport function NavButtons() {\n  const { currentPage, totalPages, wrapMode, goBack, goForward } =\n    useCarousel();\n\n  const allowWrap = wrapMode !== 'nowrap';\n\n  const enablePrevNavButton = allowWrap || currentPage > 0;\n  const enableNextNavButton = allowWrap || currentPage < totalPages - 1;\n\n  const prevNavClassName = cls(\n    'nuka-nav-button',\n    'nuka-nav-button-prev',\n    enablePrevNavButton && 'nuka-nav-button-enabled',\n  );\n\n  const nextNavClassName = cls(\n    'nuka-nav-button',\n    'nuka-nav-button-next',\n    enableNextNavButton && 'nuka-nav-button-enabled',\n  );\n\n  return (\n    <>\n      <div className={prevNavClassName} onClick={goBack}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentcolor\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M11.78 5.22a.75.75 0 0 1 0 1.06L8.06 10l3.72 3.72a.75.75 0 1 1-1.06 1.06l-4.25-4.25a.75.75 0 0 1 0-1.06l4.25-4.25a.75.75 0 0 1 1.06 0Z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </div>\n      <div className={nextNavClassName} onClick={goForward}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentcolor\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M8.22 5.22a.75.75 0 0 1 1.06 0l4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.75.75 0 0 1-1.06-1.06L11.94 10 8.22 6.28a.75.75 0 0 1 0-1.06Z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </div>\n    </>\n  );\n}\n","import { useCarousel } from '../hooks/use-carousel';\nimport { cls } from '../utils';\n\nexport const PageIndicators = () => {\n  const { totalPages, currentPage, goToPage } = useCarousel();\n\n  const className = (index: number) =>\n    cls(\n      'nuka-page-indicator',\n      currentPage === index ? 'nuka-page-indicator-active' : '',\n    );\n\n  return (\n    <div className=\"nuka-page-container\" data-testid=\"pageIndicatorContainer\">\n      {[...Array(totalPages)].map((_, index) => (\n        <button\n          key={index}\n          onClick={() => goToPage(index)}\n          className={className(index)}\n        >\n          <span className=\"nuka-hidden\">{index + 1}</span>\n        </button>\n      ))}\n    </div>\n  );\n};\n","\n          export default function styleInject(css, { insertAt } = {}) {\n            if (!css || typeof document === 'undefined') return\n          \n            const head = document.head || document.getElementsByTagName('head')[0]\n            const style = document.createElement('style')\n            style.type = 'text/css'\n          \n            if (insertAt === 'top') {\n              if (head.firstChild) {\n                head.insertBefore(style, head.firstChild)\n              } else {\n                head.appendChild(style)\n              }\n            } else {\n              head.appendChild(style)\n            }\n          \n            if (style.styleSheet) {\n              style.styleSheet.cssText = css\n            } else {\n              style.appendChild(document.createTextNode(css))\n            }\n          }\n          ","import styleInject from '#style-inject';styleInject(\".nuka-hidden {\\n  position: absolute;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  margin: -1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0);\\n  white-space: nowrap;\\n  border-width: 0;\\n}\\n.nuka-container {\\n  position: relative;\\n}\\n.nuka-slide-container {\\n  position: relative;\\n}\\n.nuka-overflow {\\n  overflow: scroll;\\n  scroll-behavior: smooth;\\n  -ms-overflow-style: none;\\n  scrollbar-width: none;\\n}\\n.nuka-overflow::-webkit-scrollbar {\\n  display: none;\\n}\\n.nuka-wrapper {\\n  display: flex;\\n}\\n.nuka-nav-button {\\n  position: absolute;\\n  top: calc(50% - 2rem);\\n  margin: 1rem;\\n  display: none;\\n  height: 2rem;\\n  width: 2rem;\\n  cursor: pointer;\\n  background-color: rgba(146, 148, 151, 0.5);\\n  color: white;\\n  border-radius: 9999px;\\n  font-size: 1rem;\\n  user-select: none;\\n}\\n.nuka-nav-button.nuka-nav-button-prev {\\n  left: 0;\\n  margin-right: 1rem;\\n}\\n.nuka-nav-button.nuka-nav-button-next {\\n  right: 0;\\n  margin-left: 1rem;\\n}\\n.nuka-nav-button:hover {\\n  background-color: rgba(146, 148, 151, 0.65);\\n}\\n.nuka-nav-button-enabled {\\n  display: block;\\n}\\n.nuka-container-auto-hide .nuka-nav-button {\\n  display: none;\\n}\\n.nuka-container-auto-hide:hover .nuka-nav-button-enabled {\\n  display: block;\\n}\\n.nuka-page-container {\\n  padding-top: 1rem;\\n  padding-bottom: 1rem;\\n  display: flex;\\n  gap: 0.5rem;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.nuka-page-indicator {\\n  width: 0.75rem;\\n  height: 0.75rem;\\n  cursor: pointer;\\n  border-radius: 9999px;\\n  border-style: none;\\n  background-color: rgba(146, 148, 151, 0.65);\\n}\\n.nuka-page-indicator.nuka-page-indicator-active,\\n.nuka-page-indicator.nuka-page-indicator-active:hover {\\n  background-color: rgb(229 231 235 / 1);\\n}\\n.nuka-page-indicator:hover {\\n  background-color: rgb(229 231 235 / 1);\\n}\\n\")"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}